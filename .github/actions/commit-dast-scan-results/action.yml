name: 'Commit DAST Scan Results'
description: 'Collects RapiDAST security scan results and commits them to the repository'
inputs:
  cluster-name:
    description: 'Name of the cluster'
    required: true
  namespace:
    description: 'Kubernetes namespace'
    required: true
  job-name:
    description: 'Name of the current job'
    required: true
  subdirectory-name:
    description: 'Name of the subdirectory within dast-results to save results'
    required: true
  github-token:
    description: 'GitHub access token for cloning and pushing to the results repository'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Collect and commit DAST scan results
      shell: bash
      run: |
        WORK_DIR=".work"
        NAME="results-for-dast-scan"
        RESULTS_DIR="$WORK_DIR/$NAME"

        # Clone the results repository
        rm -rf $RESULTS_DIR
        git clone https://${{ inputs.github-token }}@github.com/Apicurio/apicurio-testing-results.git $RESULTS_DIR
        pushd .
        cd $RESULTS_DIR
        # Configure git for the results repository
        git config user.name "apicurio-ci"
        git config user.email "apicurio.ci@gmail.com"
        popd
        
        # Create directory structure in the results repository
        RUN_DATE=$(date +%Y-%m-%d)
        JOB_DIR="$RESULTS_DIR/${RUN_DATE}-${{ github.run_id }}/${{ inputs.job-name }}"
        mkdir -p "$JOB_DIR/dast-results/${{ inputs.subdirectory-name }}"
        
        BASE_DIR="."
        CLUSTER_NAME=${{ inputs.cluster-name }}
        CLUSTER_DIR="$BASE_DIR/clusters/$CLUSTER_NAME"
        NAMESPACE=${{ inputs.namespace }}
        TESTS_DIR="$CLUSTER_DIR/namespaces/$NAMESPACE/tests"
        DAST_TESTS_DIR="$TESTS_DIR/dast"
        RAPIDAST_RESULTS_DIR="$DAST_TESTS_DIR/rapidast/results"

        echo "Looking for DAST scan results in: $RAPIDAST_RESULTS_DIR"
        echo "---"
        if [ -d "$RAPIDAST_RESULTS_DIR" ]; then
          find $RAPIDAST_RESULTS_DIR -type f | head -20
          if [ $(find $RAPIDAST_RESULTS_DIR -type f | wc -l) -gt 20 ]; then
            echo "... and more files in results/"
          fi
        else
          echo "DAST results directory not found: $RAPIDAST_RESULTS_DIR"
        fi
        echo "---"

        # Collect RapiDAST scan results
        if [ -d "$RAPIDAST_RESULTS_DIR" ]; then
          cp -r $RAPIDAST_RESULTS_DIR/* "$JOB_DIR/dast-results/${{ inputs.subdirectory-name }}/" 2>/dev/null || true
          echo "Copied DAST scan results from $RAPIDAST_RESULTS_DIR/ to subdirectory: ${{ inputs.subdirectory-name }}"
          
          # List what was copied for verification
          echo "Files copied to workflow results:"
          find "$JOB_DIR/dast-results/${{ inputs.subdirectory-name }}" -type f | head -10
          if [ $(find "$JOB_DIR/dast-results/${{ inputs.subdirectory-name }}" -type f | wc -l) -gt 10 ]; then
            echo "... and $(( $(find "$JOB_DIR/dast-results/${{ inputs.subdirectory-name }}" -type f | wc -l) - 10 )) more files"
          fi
        else
          echo "No DAST results directory found at $RAPIDAST_RESULTS_DIR"
          # Create an empty results directory to indicate the scan was attempted
          mkdir -p "$JOB_DIR/dast-results/${{ inputs.subdirectory-name }}"
          echo "DAST scan was executed but no results directory was found" > "$JOB_DIR/dast-results/${{ inputs.subdirectory-name }}/scan-status.txt"
        fi

        # Commit and push DAST scan results to the results repository
        pushd .
        cd $RESULTS_DIR
        git add .
        if git diff --cached --quiet; then
          echo "No DAST scan results to commit."
        else
          git commit -m "Add DAST scan results for job ${{ inputs.job-name }} from workflow run ${{ github.run_id }}"
          git pull origin main
          git push origin main
        fi
        popd

        # Clean up rapidast results directory after successful commit
        if [ -d "$RAPIDAST_RESULTS_DIR" ]; then
          echo "Cleaning up rapidast results directory: $RAPIDAST_RESULTS_DIR"
          rm -rf "$RAPIDAST_RESULTS_DIR"
          echo "Successfully removed rapidast results directory"
        else
          echo "No rapidast results directory to clean up"
        fi

        rm -rf $RESULTS_DIR