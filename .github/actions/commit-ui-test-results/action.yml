name: 'Commit UI Test Results'
description: 'Collects Playwright test results and commits them to the repository'
inputs:
  cluster-name:
    description: 'Name of the cluster'
    required: true
  namespace:
    description: 'Kubernetes namespace'
    required: true
  job-name:
    description: 'Name of the current job'
    required: true
  github-token:
    description: 'GitHub access token for API calls and accessing the results repository'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Collect and commit UI test results
      shell: bash
      run: |
        WORK_DIR=".work"
        NAME="results-for-ui-tests"
        RESULTS_DIR="$WORK_DIR/$NAME"

        # Clone the results repository
        rm -rf $RESULTS_DIR
        git clone https://${{ inputs.github-token }}@github.com/Apicurio/apicurio-testing-results.git $RESULTS_DIR
        pushd .
        cd $RESULTS_DIR
        # Configure git for the results repository
        git config user.name "apicurio-ci"
        git config user.email "apicurio.ci@gmail.com"
        git config pull.rebase true
        popd
        
        # Create directory structure in the results repository
        RUN_DATE=$(date +%Y-%m-%d)
        JOB_DIR="$RESULTS_DIR/${RUN_DATE}-${{ github.run_id }}/${{ inputs.job-name }}"
        mkdir -p "$JOB_DIR/test-results"

        BASE_DIR="."
        CLUSTER_NAME=${{ inputs.cluster-name }}
        CLUSTER_DIR="$BASE_DIR/cache/clusters/$CLUSTER_NAME"
        NAMESPACE=${{ inputs.namespace }}
        TESTS_DIR="$CLUSTER_DIR/namespaces/$NAMESPACE/tests"
        UI_TESTS_DIR="$TESTS_DIR/ui/apicurio-registry/ui/tests"

        echo "Looking for UI test results in: $UI_TESTS_DIR"
        echo "---"
        find $UI_TESTS_DIR
        echo "---"

        # Collect Playwright test results
        if [ -d "$UI_TESTS_DIR/playwright-report" ]; then
          cp -r $UI_TESTS_DIR/playwright-report/* "$JOB_DIR/test-results/" 2>/dev/null || true
          echo "Copied Playwright HTML report from $UI_TESTS_DIR/playwright-report/"
        fi

        # Collect test results JSON files
        if [ -d "$UI_TESTS_DIR/test-results" ]; then
          mkdir -p "$JOB_DIR/test-results/raw-results"
          cp -r $UI_TESTS_DIR/test-results/* "$JOB_DIR/test-results/raw-results/" 2>/dev/null || true
          echo "Copied Playwright raw test results from $UI_TESTS_DIR/test-results/"
        fi

        # Commit and push ui test results to the results repository
        pushd .
        cd $RESULTS_DIR
        git add .
        if git diff --cached --quiet; then
          echo "No UI test results to commit."
        else
          git commit -m "Add UI test results for job ${{ inputs.job-name }} from workflow run ${{ github.run_id }}"
          for attempt in {1..5}; do
            if git pull origin main && git push origin main; then
              break
            else
              if [ $attempt -lt 5 ]; then
                echo "Attempt $attempt failed. Retrying in $((attempt * 2)) seconds..."
                sleep $((attempt * 2))
              else
                echo "All retry attempts failed"
                exit 1
              fi
            fi
          done
        fi
        popd

        rm -rf $RESULTS_DIR