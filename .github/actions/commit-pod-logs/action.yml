name: 'Commit Pod Logs'
description: 'Downloads pod logs and commits them to the repository'
inputs:
  cluster-name:
    description: 'Name of the cluster'
    required: true
  namespace:
    description: 'Kubernetes namespace'
    required: true
  job-name:
    description: 'Name of the current job'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Download and commit pod logs
      shell: bash
      run: |
        # Clone the results repository if it doesn't already exist
        if [ ! -d "workflow-results" ]; then
          git clone https://${{ inputs.github-token }}@github.com/Apicurio/apicurio-testing-results.git workflow-results
          cd workflow-results
          # Configure git for the results repository
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          cd ..
        else
          echo "workflow-results directory already exists, skipping clone"
        fi
        
        # Download pod logs
        ./download-pod-logs.sh --cluster ${{ inputs.cluster-name }} --namespace ${{ inputs.namespace }}

        BASE_DIR="."

        CLUSTER_NAME=${{ inputs.cluster-name }}
        NAMESPACE=${{ inputs.namespace }}
        LOGS_DIR="$BASE_DIR/logs/$CLUSTER_NAME/$NAMESPACE"

        # Create workflow-results directory structure
        RUN_DATE=$(date +%Y-%m-%d)
        RESULTS_DIR="workflow-results/${RUN_DATE}-${{ github.run_id }}/${{ inputs.job-name }}/pod-logs"
        mkdir -p "$RESULTS_DIR"
        cp -r $LOGS_DIR/* "$RESULTS_DIR/" 2>/dev/null || true
        
        # Commit and push pod logs to the results repository
        cd workflow-results
        git pull origin main
        git add .
        if git diff --cached --quiet; then
          echo "No pod logs to commit."
        else
          git commit -m "Add pod logs for job ${{ inputs.job-name }} from workflow run ${{ github.run_id }}"
          git push origin main
        fi
        cd ..
