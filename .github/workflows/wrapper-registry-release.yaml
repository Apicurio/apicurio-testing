name: QE Registry Release Tests (Wrapper)

on:
  workflow_dispatch:
    inputs:
      version:
        description: Release version to test
        required: true
        type: string
      operatorImage:
        description: Operator image to test (optional)
        required: false
        type: string
      appImage:
        description: Application image to test (optional)
        required: false
        type: string
      uiImage:
        description: UI image to test (optional)
        required: false
        type: string
      issue_number:
        description: Release tracker issue number in apicurio/rhboar-releases
        required: true
        type: string
      step_id:
        description: Release step ID
        required: false
        type: string
        default: qe-registry-aws

jobs:
  run-qe-tests:
    name: Run QE Registry Tests
    uses: ./.github/workflows/test-registry-release.yaml
    with:
      release-version: ${{ inputs.version }}
      operatorImage: ${{ inputs.operatorImage }}
      appImage: ${{ inputs.appImage }}
      uiImage: ${{ inputs.uiImage }}
      tests-tag: ${{ inputs.version }}
      isDownstream: 'true'
      skipClusterInstall: 'false'
      dryRun: 'false'
    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      OPENSHIFT_PULL_SECRET: ${{ secrets.OPENSHIFT_PULL_SECRET }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DOCKER_SERVER: ${{ secrets.DOCKER_SERVER }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_EMAIL: ${{ secrets.DOCKER_EMAIL }}

  report-results:
    name: Report Results to Release Issue
    runs-on: ubuntu-latest
    needs: run-qe-tests
    if: always()

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Determine test result
        id: result
        run: |
          if [[ "${{ needs.run-qe-tests.result }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "emoji=✅" >> $GITHUB_OUTPUT
            echo "message=**QE Registry Tests (AWS) Succeeded**" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "emoji=❌" >> $GITHUB_OUTPUT
            echo "message=**QE Registry Tests (AWS) Failed**" >> $GITHUB_OUTPUT
          fi

      - name: Get workflow run details
        id: workflow-details
        run: |
          # Use the run ID from the called test-registry-release workflow
          RUN_ID="${{ needs.run-qe-tests.outputs.run-id }}"
          RUN_DATE="${{ needs.run-qe-tests.outputs.run-date }}"

          WORKFLOW_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${RUN_ID}"
          echo "workflow_url=$WORKFLOW_URL" >> $GITHUB_OUTPUT

          # Generate report URL in format: https://www.apicur.io/apicurio-testing-results/YYYY-MM-DD-<jobId>/index.html
          REPORT_URL="https://www.apicur.io/apicurio-testing-results/${RUN_DATE}-${RUN_ID}/index.html"
          echo "report_url=$REPORT_URL" >> $GITHUB_OUTPUT

      - name: Post result comment to release issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}
          script: |
            const emoji = '${{ steps.result.outputs.emoji }}';
            const message = '${{ steps.result.outputs.message }}';
            const version = '${{ inputs.version }}';
            const reportUrl = '${{ steps.workflow-details.outputs.report_url }}';
            const workflowUrl = '${{ steps.workflow-details.outputs.workflow_url }}';
            const stepId = '${{ inputs.step_id }}';
            const status = '${{ steps.result.outputs.status }}';

            let command;
            if (status === 'success') {
              command = `/complete ${stepId} report_url=${reportUrl}`;
            } else {
              command = `/fail ${stepId}`;
            }

            const commentBody = `${emoji} ${message}

            **Version:** ${version}

            **QE Test Result Report**
            * ${reportUrl}

            **Workflow Run**
            * ${workflowUrl}

            ---

            ${command}`;

            await github.rest.issues.createComment({
              owner: 'apicurio',
              repo: 'rhboar-releases',
              issue_number: ${{ inputs.issue_number }},
              body: commentBody
            });

      - name: Fail job if tests failed
        if: steps.result.outputs.status == 'failure'
        run: |
          echo "QE tests failed. Failing this job."
          exit 1
