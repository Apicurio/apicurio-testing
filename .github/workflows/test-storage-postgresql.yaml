name: Test Apicurio Registry Release for PostgreSQL
on:
  workflow_call:
    inputs:
      cluster-name:
        type: string
        required: true
      postgresql-version:
        type: string
        description: PostgreSQL version to test
        required: true
      testsuite-git-ref:
        type: string
        description: >-
          Upstream Apicurio Registry test suite is used to run the tests. 
          This git reference (e.g. tag or branch) is used to checkout the test suite code.
        required: true
      is-downstream:
        type: boolean
        description: >-
          Run the tests in downstream mode. Currently, it is only used in the UI tests 
          to check that the UI is productized.
        required: true

env:
  NAMESPACE: pg${{ inputs.postgresql-version }}

jobs:

  setup:
    name: Setup (PostgreSQL ${{ inputs.postgresql-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Restore cluster state
        uses: ./.github/actions/restore-cluster-state
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster ${{ inputs.cluster-name }} \
              --namespace $NAMESPACE \
              --profile postgresql \
              --postgresqlVersion ${{ inputs.postgresql-version }}

      - name: Commit pod logs
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ inputs.cluster-name }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          github-token: ${{ secrets.ACCESS_TOKEN }}

  ui-tests:
    name: UI Tests (PostgreSQL ${{ inputs.postgresql-version }})
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 25
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Restore cluster state
        uses: ./.github/actions/restore-cluster-state
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}

      - name: Run UI Tests
        run: |
          ./run-ui-tests.sh --cluster ${{ inputs.cluster-name }} \
              --namespace $NAMESPACE \
              --isDownstream ${{ inputs.is-downstream }} \
              --tag ${{ inputs.testsuite-git-ref }}

      - name: Commit UI test results
        if: always()
        uses: ./.github/actions/commit-ui-test-results
        with:
          cluster-name: ${{ inputs.cluster-name }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          github-token: ${{ secrets.ACCESS_TOKEN }}

      - name: Commit pod logs
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ inputs.cluster-name }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          github-token: ${{ secrets.ACCESS_TOKEN }}

  integration-tests:
    name: Integration Tests (PostgreSQL ${{ inputs.postgresql-version }})
    runs-on: ubuntu-latest
    needs: ui-tests
    timeout-minutes: 40
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Restore cluster state
        uses: ./.github/actions/restore-cluster-state
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster ${{ inputs.cluster-name }} \
            --namespace $NAMESPACE \
            --tag ${{ inputs.testsuite-git-ref }} \
            --testProfile all

      - name: Commit integration test results
        if: always()
        uses: ./.github/actions/commit-integration-test-results
        with:
          cluster-name: ${{ inputs.cluster-name }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          github-token: ${{ secrets.ACCESS_TOKEN }}

      - name: Commit pod logs
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ inputs.cluster-name }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          github-token: ${{ secrets.ACCESS_TOKEN }}

  teardown:
    name: Teardown (PostgreSQL ${{ inputs.postgresql-version }})
    runs-on: ubuntu-latest
    needs:
      - ui-tests
      - integration-tests
    if: always()
    timeout-minutes: 10
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Restore cluster state
        uses: ./.github/actions/restore-cluster-state
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}

      - name: Destroy Namespace
        run: |
          ./destroy-namespace.sh --cluster ${{ inputs.cluster-name }} \
            --namespace $NAMESPACE
