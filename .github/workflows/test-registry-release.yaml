name: Test Apicurio Registry Release
on:
  workflow_dispatch:
    inputs:
      release-version:
        description: Released version to test
        required: true

jobs:
  openshift-419:
    name: OpenShift 4.19
    runs-on: ubuntu-22.04

    env:
      OPENSHIFT_PULL_SECRET: ${{ secrets.OPENSHIFT_PULL_SECRET }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "us-east-1"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check Required tools
        run: |
          curl --version
          jq --version

      - name: Install OpenShift cluster
        run: |
          echo "TBD: install the cluster!"
          cat install-cluster.sh
          mkdir -p clusters/cluster-foo
          echo "Testing" > clusters/cluster-foo/testing.output
          find clusters

      - name: Package up the "clusters" directory
        run: |
          zip -r ${{ github.job }}-clusters.zip clusters/

      - name: Upload cluster state
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-clusters.zip
          path: ${{ github.job }}-clusters.zip


  openshift-419_inmemory:
    name: Apicurio Registry (in-memory)
    runs-on: ubuntu-22.04
    needs: openshift-419

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest' # or pin to a specific version like '1.30.1'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Download cluster state
        uses: actions/download-artifact@v4
        with:
          name: openshift-419-clusters.zip

      - name: Install Apicurio Registry
        run: |
          echo "TBD: install the app!"


  openshift-419_postgresql:
    name: Apicurio Registry (postgresql)
    runs-on: ubuntu-22.04
    needs: openshift-419

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest' # or pin to a specific version like '1.30.1'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Download cluster state
        uses: actions/download-artifact@v4
        with:
          name: openshift-419-clusters.zip

      - name: Install Apicurio Registry
        run: |
          echo "TBD: install the app!"


  openshift-419_mysql:
    name: Apicurio Registry (mysql)
    runs-on: ubuntu-22.04
    needs: openshift-419

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest' # or pin to a specific version like '1.30.1'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Download cluster state
        uses: actions/download-artifact@v4
        with:
          name: openshift-419-clusters.zip

      - name: Install Apicurio Registry
        run: |
          echo "TBD: install the app!"


  openshift-419_inmemory_uitests:
    name: UI Tests
    runs-on: ubuntu-22.04
    needs: openshift-419_inmemory

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download cluster state
        uses: actions/download-artifact@v4
        with:
          name: openshift-419-clusters.zip

      - name: Run UI Tests
        run: |
          echo "TBD: run UI tests!"


  openshift-419_inmemory_integrationtests:
    name: Integration Tests 0
    runs-on: ubuntu-22.04
    needs: openshift-419_inmemory

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download cluster state
        uses: actions/download-artifact@v4
        with:
          name: openshift-419-clusters.zip

      - name: Run Integration Tests
        run: |
          echo "TBD: run integration tests!"


  openshift-419_postgresql_uitests:
    name: UI Tests
    runs-on: ubuntu-22.04
    needs: openshift-419_postgresql

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download cluster state
        uses: actions/download-artifact@v4
        with:
          name: openshift-419-clusters.zip

      - name: Run UI Tests
        run: |
          echo "TBD: run UI tests!"


  openshift-419_postgresql_integrationtests:
    name: Integration Tests 1
    runs-on: ubuntu-22.04
    needs: openshift-419_postgresql

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download cluster state
        uses: actions/download-artifact@v4
        with:
          name: openshift-419-clusters.zip

      - name: Run Integration Tests
        run: |
          echo "TBD: run integration tests!"


  openshift-419_mysql_uitests:
    name: UI Tests
    runs-on: ubuntu-22.04
    needs: openshift-419_mysql

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download cluster state
        uses: actions/download-artifact@v4
        with:
          name: openshift-419-clusters.zip

      - name: Run UI Tests
        run: |
          echo "TBD: run UI tests!"


  openshift-419_mysql_integrationtests:
    name: Integration Tests 2
    runs-on: ubuntu-22.04
    needs: openshift-419_mysql

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download cluster state
        uses: actions/download-artifact@v4
        with:
          name: openshift-419-clusters.zip

      - name: Run Integration Tests
        run: |
          echo "TBD: run integration tests!"


  openshift-419-teardown:
    name: Destroy OpenShift 4.19
    runs-on: ubuntu-22.04
    needs:
      - openshift-419_inmemory_uitests
      - openshift-419_inmemory_integrationtests,
      - openshift-419_postgresql_uitests
      - openshift-419_postgresql_integrationtests,
      - openshift-419_mysql_uitests
      - openshift-419_mysql_integrationtests,
    if: always()

    env:
      OPENSHIFT_PULL_SECRET: ${{ secrets.OPENSHIFT_PULL_SECRET }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "us-east-1"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download cluster state
        uses: actions/download-artifact@v4
        with:
          name: openshift-419-clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          echo "TBD: destroy the cluster!"
