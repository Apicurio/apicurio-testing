name: Test Apicurio Registry Release
on:
  workflow_dispatch:
    inputs:
      release-version:
        description: Released version to test
        required: true

jobs:
  openshift-419:
    name: OpenShift 4.19
    runs-on: ubuntu-22.04

    env:
      OPENSHIFT_PULL_SECRET: ${{ secrets.OPENSHIFT_PULL_SECRET }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "us-east-1"
      OPENSHIFT_VERSION: "4.19"
      CLUSTER_NAME: ci419
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}
      CONTROL_PLANE_NODES: 3
      COMPUTE_NODES: 6

    steps:
      - name: Check Required tools
        run: |
          curl --version
          jq --version
          git --version

      - name: Checkout Code
        run: |
          git init
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"
          git remote add origin "https://apicurio-ci:${{ secrets.ACCESS_TOKEN }}@github.com/Apicurio/apicurio-testing.git"
          git fetch
          git checkout main
          git branch --set-upstream-to=origin/main
          git pull

      - name: Install OpenShift cluster
        run: |
          ./install-cluster.sh --cluster $CLUSTER_NAME --okdVersion $OPENSHIFT_VERSION --controlPlaneNodes $CONTROL_PLANE_NODES --computeNodes $COMPUTE_NODES

      - name: Install Apicurio Registry Operator
        run: |
          ./install-apicurio-operator.sh --cluster $CLUSTER_NAME --version $APICURIO_REGISTRY_VERSION

      - name: Commit TLS Certs (if necessary)
        run: |
          git pull origin main
          git add certificates
          if git diff --cached --quiet; then
            echo "Nothing to commit."
          else
            git commit -m '(re)generated TLS certificate for cluster $CLUSTER_NAME'
            git push origin main
          fi

      - name: Package up the "clusters" directory
        if: always()
        run: |
          rm -f clusters/$CLUSTER_NAME/openshift-install.tar.gz
          rm -f clusters/$CLUSTER_NAME/openshift-install
          mkdir -p clusters
          zip -r clusters.zip clusters/
          echo ""
          echo "***** Content of 'clusters.zip' *****"
          unzip -l clusters.zip
          echo ""

      - name: Copy clusters.zip to workflow-cache
        if: always()
        run: |
          mkdir -p workflow-cache/runs/${{ github.run_id }}
          cp clusters.zip workflow-cache/runs/${{ github.run_id }}/
          echo ""
          echo "**** Verifying copy ****"
          echo "ls -al:: "
          ls -al workflow-cache/runs | grep ${{ github.run_id }}
          echo "find::  "
          find workflow-cache/runs/${{ github.run_id }}

      - name: Commit cluster state to repository
        if: always()
        run: |
          git pull origin main
          git add workflow-cache/runs
          git commit -m "Add cluster state for workflow run ${{ github.run_id }}"
          git push origin main


  openshift-419_inmemory:
    name: Apicurio Registry (in-memory)
    runs-on: ubuntu-22.04
    needs: openshift-419

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: inmemory
      PROFILE: inmemory

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE

      - name: Package up the pod logs
        if: failure()
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_postgresql:
    name: Apicurio Registry (postgresql)
    runs-on: ubuntu-22.04
    needs: openshift-419_inmemory

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: postgresql
      PROFILE: postgresql

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE

      - name: Package up the pod logs
        if: failure()
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_mysql:
    name: Apicurio Registry (mysql)
    runs-on: ubuntu-22.04
    needs: openshift-419_postgresql

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: mysql
      PROFILE: mysql

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE

      - name: Package up the pod logs
        if: failure()
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_kafkasql:
    name: Apicurio Registry (kafkasql)
    runs-on: ubuntu-22.04
    needs: openshift-419_mysql

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: kafkasql
      PROFILE: kafkasql
      STRIMZI_VERSION: 0.47.0

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE --strimziVersion $STRIMZI_VERSION

      - name: Package up the pod logs
        if: failure()
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_authn:
    name: Apicurio Registry (authn)
    runs-on: ubuntu-22.04
    needs: openshift-419_kafkasql

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: authn
      PROFILE: authn
      KEYCLOAK_VERSION: 26.3.1

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Keycloak Operator
        run: |
          ./install-keycloak-operator.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE

      - name: Install Keycloak
        run: |
          ./install-keycloak.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --keycloakVersion $KEYCLOAK_VERSION

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE

      - name: Package up the pod logs
        if: failure()
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_inmemory_uitests:
    name: UI Tests (in mem)
    runs-on: ubuntu-22.04
    needs: openshift-419_inmemory

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: inmemory
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run UI Tests
        run: |
          ./run-ui-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag v$APICURIO_REGISTRY_VERSION

      - name: Package up the pod logs
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_inmemory_integrationtests:
    name: Integration Tests (in mem)
    runs-on: ubuntu-22.04
    needs: openshift-419_inmemory

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: inmemory
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag v$APICURIO_REGISTRY_VERSION

      - name: Package up the pod logs
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_postgresql_uitests:
    name: UI Tests (postgresql)
    runs-on: ubuntu-22.04
    needs: openshift-419_postgresql

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: postgresql
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run UI Tests
        run: |
          ./run-ui-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag v$APICURIO_REGISTRY_VERSION

      - name: Package up the pod logs
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_postgresql_integrationtests:
    name: Integration Tests (postgresql)
    runs-on: ubuntu-22.04
    needs: openshift-419_postgresql

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: postgresql
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag v$APICURIO_REGISTRY_VERSION

      - name: Package up the pod logs
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_mysql_uitests:
    name: UI Tests (mysql)
    runs-on: ubuntu-22.04
    needs: openshift-419_mysql

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: mysql
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run UI Tests
        run: |
          ./run-ui-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag v$APICURIO_REGISTRY_VERSION

      - name: Package up the pod logs
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_mysql_integrationtests:
    name: Integration Tests (mysql)
    runs-on: ubuntu-22.04
    needs: openshift-419_mysql

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: mysql
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag v$APICURIO_REGISTRY_VERSION

      - name: Package up the pod logs
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_kafkasql_uitests:
    name: UI Tests (kafkasql)
    runs-on: ubuntu-22.04
    needs: openshift-419_kafkasql

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: kafkasql
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run UI Tests
        run: |
          ./run-ui-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag v$APICURIO_REGISTRY_VERSION

      - name: Package up the pod logs
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_kafkasql_integrationtests:
    name: Integration Tests (kafkasql)
    runs-on: ubuntu-22.04
    needs: openshift-419_kafkasql

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: kafkasql
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag v$APICURIO_REGISTRY_VERSION

      - name: Package up the pod logs
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_authn_integrationtests:
    name: Integration Tests (authn)
    runs-on: ubuntu-22.04
    needs: openshift-419_authn

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: authn
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag main --testProfile auth --registryProtocol https --registryPort 443

      - name: Package up the pod logs
        run: |
          ./download-pod-logs.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE
          zip -r ${{ github.job }}-logs.zip logs/

      - name: Upload pod logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-logs.zip
          path: ${{ github.job }}-logs.zip


  openshift-419_inmemory_teardown:
    name: Destroy Registry (inmemory)
    runs-on: ubuntu-22.04
    needs:
      - openshift-419_inmemory_uitests
      - openshift-419_inmemory_integrationtests
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: inmemory

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  openshift-419_postgresql_teardown:
    name: Destroy Registry (postgresql)
    runs-on: ubuntu-22.04
    needs:
      - openshift-419_postgresql_uitests
      - openshift-419_postgresql_integrationtests
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: postgresql

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  openshift-419_mysql_teardown:
    name: Destroy Registry (mysql)
    runs-on: ubuntu-22.04
    needs:
      - openshift-419_mysql_uitests
      - openshift-419_mysql_integrationtests
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: mysql

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  openshift-419_kafkasql_teardown:
    name: Destroy Registry (kafkasql)
    runs-on: ubuntu-22.04
    needs:
      - openshift-419_kafkasql_uitests
      - openshift-419_kafkasql_integrationtests
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: kafkasql

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  openshift-419_authn_teardown:
    name: Destroy Registry (authn)
    runs-on: ubuntu-22.04
    needs:
      - openshift-419_authn_integrationtests
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: authn

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  openshift-419-teardown:
    name: Destroy OpenShift 4.19
    runs-on: ubuntu-22.04
    needs:
      - openshift-419_inmemory_teardown
      - openshift-419_postgresql_teardown
      - openshift-419_mysql_teardown
      - openshift-419_kafkasql_teardown
      - openshift-419_authn_teardown
    if: always()

    env:
      OPENSHIFT_PULL_SECRET: ${{ secrets.OPENSHIFT_PULL_SECRET }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "us-east-1"
      CLUSTER_NAME: ci419

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-cluster.sh --cluster $CLUSTER_NAME
