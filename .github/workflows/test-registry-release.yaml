name: Test Apicurio Registry Release
on:
  workflow_dispatch:
    inputs:
      release-version:
        description: Released version to test
        required: true
      tests-tag:
        description: git tag to use for running tests
        required: true
        default: main

jobs:
  os419:
    name: OpenShift 4.19
    runs-on: ubuntu-22.04
    timeout-minutes: 90

    env:
      OPENSHIFT_PULL_SECRET: ${{ secrets.OPENSHIFT_PULL_SECRET }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "us-east-1"
      OPENSHIFT_VERSION: "4.19"
      CLUSTER_NAME: ci419
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}
      CONTROL_PLANE_NODES: 3
      COMPUTE_NODES: 6

    steps:
      - name: Check Required tools
        run: |
          curl --version
          jq --version
          git --version

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Install OpenShift cluster
        run: |
          ./install-cluster.sh --cluster $CLUSTER_NAME --okdVersion $OPENSHIFT_VERSION --controlPlaneNodes $CONTROL_PLANE_NODES --computeNodes $COMPUTE_NODES

      - name: Install Apicurio Registry Operator
        run: |
          ./install-apicurio-operator.sh --cluster $CLUSTER_NAME --version $APICURIO_REGISTRY_VERSION

      - name: Commit TLS Certs (if necessary)
        run: |
          git pull origin main
          git add certificates
          if git diff --cached --quiet; then
            echo "Nothing to commit."
          else
            git commit -m '(re)generated TLS certificate for cluster $CLUSTER_NAME'
            git push origin main
          fi

      - name: Package up the "clusters" directory
        if: always()
        run: |
          rm -f clusters/$CLUSTER_NAME/openshift-install.tar.gz
          rm -f clusters/$CLUSTER_NAME/openshift-install
          mkdir -p clusters
          zip -r clusters.zip clusters/
          echo ""
          echo "***** Content of 'clusters.zip' *****"
          unzip -l clusters.zip
          echo ""

      - name: Copy clusters.zip to workflow-cache
        if: always()
        run: |
          mkdir -p workflow-cache/runs/${{ github.run_id }}
          cp clusters.zip workflow-cache/runs/${{ github.run_id }}/
          echo ""
          echo "**** Verifying copy ****"
          echo "ls -al:: "
          ls -al workflow-cache/runs | grep ${{ github.run_id }}
          echo "find::  "
          find workflow-cache/runs/${{ github.run_id }}
          echo "git status"
          git status

      - name: Commit cluster state to repository
        if: always()
        run: |
          git pull origin main
          git add workflow-cache/runs
          git commit -m "Add cluster state for workflow run ${{ github.run_id }}"
          git push origin main


  os419_inmemory:
    name: Apicurio Registry (in-memory)
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: os419

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: inmemory
      PROFILE: inmemory

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE

      - name: Commit pod logs to repository
        if: always()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_pg17:
    name: Apicurio Registry (pg 17)
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: os419_inmemory
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: pg17
      PROFILE: postgresql
      POSTGRESQL_VERSION: 17

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE --postgresqlVersion $POSTGRESQL_VERSION

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_pg12:
    name: Apicurio Registry (pg12)
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: os419_pg17
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: pg12
      PROFILE: postgresql
      POSTGRESQL_VERSION: 12

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE --postgresqlVersion $POSTGRESQL_VERSION

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_mysql:
    name: Apicurio Registry (mysql)
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: os419_pg12
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: mysql
      PROFILE: mysql

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_strimzi047:
    name: Apicurio Registry (strimzi 0.47)
    runs-on: ubuntu-22.04
    timeout-minutes: 40
    needs: os419_mysql
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: ksql047
      PROFILE: kafkasql
      STRIMZI_VERSION: 0.47.0

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Strimzi Operator
        run: |
          ./install-strimzi.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --version $STRIMZI_VERSION

      - name: Install Kafka Cluster
        run: |
          ./install-kafka.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_strimzi043:
    name: Apicurio Registry (strimzi 0.43)
    runs-on: ubuntu-22.04
    timeout-minutes: 40
    needs: os419_strimzi047
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: ksql043
      PROFILE: kafkasql
      STRIMZI_VERSION: 0.43.0

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Strimzi Operator
        run: |
          ./install-strimzi.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --version $STRIMZI_VERSION

      - name: Install Kafka Cluster
        run: |
          ./install-kafka.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_authn:
    name: Apicurio Registry (authn)
    runs-on: ubuntu-22.04
    timeout-minutes: 40
    needs: os419_strimzi043
    if: always()
    
    env:
      CLUSTER_NAME: ci419
      NAMESPACE: authn
      PROFILE: authn
      KEYCLOAK_VERSION: 26.3.1

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify kubectl
        run: kubectl version --client

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Install Keycloak Operator
        run: |
          ./install-keycloak-operator.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE

      - name: Install Keycloak
        run: |
          ./install-keycloak.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE

      - name: Install Apicurio Registry
        run: |
          ./install-apicurio-registry.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --profile $PROFILE

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_inmemory_uitests:
    name: UI Tests (in mem)
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    needs: os419_inmemory

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: inmemory
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run UI Tests
        run: |
          ./run-ui-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }}

      - name: Commit UI test results to repository
        if: always()
        uses: ./.github/actions/commit-ui-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_inmemory_integrationtests:
    name: Integration Tests (in mem)
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: os419_inmemory_uitests

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: inmemory
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }}

      - name: Commit integration test results to repository
        if: always()
        uses: ./.github/actions/commit-integration-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_inmemory_dastscan:
    name: DAST Scan (in mem)
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    needs: os419_inmemory_integrationtests

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: inmemory
      RAPIDAST_TAG: development

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run DAST Scanner (v3)
        run: |
          ./run-dast-scan.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --config registry_v3_unauthenticated.yaml --tag $RAPIDAST_TAG

      - name: Commit DAST scan results to repository
        uses: ./.github/actions/commit-dast-scan-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}
          subdirectory-name: registry-v3-unauthenticated

      - name: Run DAST Scanner (v2)
        run: |
          ./run-dast-scan.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --config registry_v2_unauthenticated.yaml --tag $RAPIDAST_TAG

      - name: Commit DAST scan results to repository
        uses: ./.github/actions/commit-dast-scan-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}
          subdirectory-name: registry-v2-unauthenticated

      - name: Run DAST Scanner (ccompat v7)
        run: |
          ./run-dast-scan.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --config ccompat_v7_unauthenticated.yaml --tag $RAPIDAST_TAG

      - name: Commit DAST scan results to repository
        uses: ./.github/actions/commit-dast-scan-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}
          subdirectory-name: ccompat-v7-unauthenticated


  os419_pg17_uitests:
    name: UI Tests (pg17)
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    needs: os419_pg17

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: pg17
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run UI Tests
        run: |
          ./run-ui-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }}

      - name: Commit UI test results to repository
        if: always()
        uses: ./.github/actions/commit-ui-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_pg17_integrationtests:
    name: Integration Tests (pg17)
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: os419_pg17_uitests

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: pg17
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}
      TEST_PROFILE: all

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }} --testProfile $TEST_PROFILE

      - name: Commit integration test results to repository
        if: always()
        uses: ./.github/actions/commit-integration-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_pg12_integrationtests:
    name: Integration Tests (pg12)
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: os419_pg12

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: pg12
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}
      TEST_PROFILE: smoke

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }} --testProfile $TEST_PROFILE

      - name: Commit integration test results to repository
        if: always()
        uses: ./.github/actions/commit-integration-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_mysql_uitests:
    name: UI Tests (mysql)
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    needs: os419_mysql

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: mysql
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run UI Tests
        run: |
          ./run-ui-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }}

      - name: Commit UI test results to repository
        if: always()
        uses: ./.github/actions/commit-ui-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_mysql_integrationtests:
    name: Integration Tests (mysql)
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: os419_mysql_uitests

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: mysql
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }}

      - name: Commit integration test results to repository
        if: always()
        uses: ./.github/actions/commit-integration-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_strimzi047_uitests:
    name: UI Tests (strimzi 0.47)
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    needs: os419_strimzi047

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: ksql047
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run UI Tests
        run: |
          ./run-ui-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }}

      - name: Commit UI test results to repository
        if: always()
        uses: ./.github/actions/commit-ui-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_strimzi047_integrationtests:
    name: Integration Tests (strimzi 0.47)
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: os419_strimzi047_uitests

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: ksql047
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }}

      - name: Commit integration test results to repository
        if: always()
        uses: ./.github/actions/commit-integration-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_strimzi043_uitests:
    name: UI Tests (strimzi 0.43)
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    needs: os419_strimzi043

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: ksql043
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run UI Tests
        run: |
          ./run-ui-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }}

      - name: Commit UI test results to repository
        if: always()
        uses: ./.github/actions/commit-ui-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_strimzi043_integrationtests:
    name: Integration Tests (strimzi 0.43)
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: os419_strimzi043_uitests

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: ksql043
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }}

      - name: Commit integration test results to repository
        if: always()
        uses: ./.github/actions/commit-integration-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_authn_integrationtests:
    name: Integration Tests (authn)
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: os419_authn

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: authn
      APICURIO_REGISTRY_VERSION: ${{ github.event.inputs.release-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run Integration Tests
        run: |
          ./run-integration-tests.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --tag ${{ github.event.inputs.tests-tag }} --testProfile auth --registryProtocol https --registryPort 443

      - name: Commit integration test results to repository
        if: always()
        uses: ./.github/actions/commit-integration-test-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}

      - name: Commit pod logs to repository
        if: failure()
        uses: ./.github/actions/commit-pod-logs
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}


  os419_authn_dastscan:
    name: DAST Scan (authn)
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    needs: os419_authn_integrationtests

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: authn
      RAPIDAST_TAG: development

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Run DAST Scanner (v3)
        run: |
          ./run-dast-scan.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --config registry_v3_authenticated.yaml --tag $RAPIDAST_TAG --authEnabled true

      - name: Commit DAST scan results to repository
        uses: ./.github/actions/commit-dast-scan-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}
          subdirectory-name: registry-v3-authenticated

      - name: Run DAST Scanner (v2)
        run: |
          ./run-dast-scan.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --config registry_v2_authenticated.yaml --tag $RAPIDAST_TAG --authEnabled true

      - name: Commit DAST scan results to repository
        uses: ./.github/actions/commit-dast-scan-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}
          subdirectory-name: registry-v2-authenticated

      - name: Run DAST Scanner (ccompat v7)
        run: |
          ./run-dast-scan.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE --config ccompat_v7_authenticated.yaml --tag $RAPIDAST_TAG --authEnabled true

      - name: Commit DAST scan results to repository
        uses: ./.github/actions/commit-dast-scan-results
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          namespace: ${{ env.NAMESPACE }}
          job-name: ${{ github.job }}
          run-id: ${{ github.run_id }}
          subdirectory-name: ccompat-v7-authenticated



  os419_inmemory_teardown:
    name: Destroy Registry (inmemory)
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - os419_inmemory_uitests
      - os419_inmemory_integrationtests
      - os419_inmemory_dastscan
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: inmemory

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  os419_pg17_teardown:
    name: Destroy Registry (pg17)
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - os419_pg17_uitests
      - os419_pg17_integrationtests
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: pg17

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  os419_pg12_teardown:
    name: Destroy Registry (pg12)
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - os419_pg12_integrationtests
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: pg12

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  os419_mysql_teardown:
    name: Destroy Registry (mysql)
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - os419_mysql_uitests
      - os419_mysql_integrationtests
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: mysql

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  os419_strimzi047_teardown:
    name: Destroy Registry (strimzi 0.47)
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - os419_strimzi047_uitests
      - os419_strimzi047_integrationtests
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: ksql047

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  os419_strimzi043_teardown:
    name: Destroy Registry (strimzi 0.43)
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - os419_strimzi043_uitests
      - os419_strimzi043_integrationtests
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: ksql043

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  os419_authn_teardown:
    name: Destroy Registry (authn)
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - os419_authn_integrationtests
      - os419_authn_dastscan
    if: always()

    env:
      CLUSTER_NAME: ci419
      NAMESPACE: authn

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-namespace.sh --cluster $CLUSTER_NAME --namespace $NAMESPACE


  os419_teardown:
    name: Destroy OpenShift 4.19
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    needs:
      - os419_inmemory_teardown
      - os419_pg17_teardown
      - os419_pg12_teardown
      - os419_mysql_teardown
      - os419_strimzi047_teardown
      - os419_strimzi043_teardown
      - os419_authn_teardown
    if: always()

    env:
      OPENSHIFT_PULL_SECRET: ${{ secrets.OPENSHIFT_PULL_SECRET }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "us-east-1"
      CLUSTER_NAME: ci419

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Configure Git
        run: |
          git config --global user.name "apicurio-ci"
          git config --global user.email "apicurio.ci@gmail.com"

      - name: Copy cluster state from repository
        run: |
          cp workflow-cache/runs/${{ github.run_id }}/clusters.zip .

      - name: Unpack cluster state
        run: |
          unzip clusters.zip

      - name: Destroy OpenShift cluster
        run: |
          ./destroy-cluster.sh --cluster $CLUSTER_NAME

      - name: Remove clusters.zip from git
        run: |
          git pull origin main
          rm -rf workflow-cache/runs/${{ github.run_id }}
          git add workflow-cache/runs/${{ github.run_id }}
          if git diff --cached --quiet; then
            echo "clusters.zip file was already removed or does not exist."
          else
            git commit -m "Remove clusters.zip for workflow run ${{ github.run_id }} after cluster teardown"
            git push origin main
          fi
