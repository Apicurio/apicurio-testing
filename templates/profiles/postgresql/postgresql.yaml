apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: ${NAMESPACE}
type: Opaque
data:
  # Default credentials (base64 encoded)
  # Username: pguser (cGd1c2Vy)
  # Password: pgpassword (cGdwYXNzd29yZA==)
  # Database: apicuriodb (YXBpY3VyaW9kYg==)
  POSTGRESQL_USER: cGd1c2Vy
  POSTGRESQL_PASSWORD: cGdwYXNzd29yZA==
  POSTGRESQL_DATABASE: YXBpY3VyaW9kYg==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: ${NAMESPACE}
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: registry.redhat.io/rhel8/postgresql-16:latest
        ports:
        - containerPort: 5432
          name: postgresql
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRESQL_USER
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRESQL_PASSWORD
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRESQL_DATABASE
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U $POSTGRESQL_USER -d $POSTGRESQL_DATABASE
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U $POSTGRESQL_USER -d $POSTGRESQL_DATABASE
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgresql-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: ${NAMESPACE}
  labels:
    app: postgresql
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgresql
  selector:
    app: postgresql
