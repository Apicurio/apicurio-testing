apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  labels:
    app: sso
  name: registry-sso-realm
  namespace: $NAMESPACE
spec:
  keycloakCRName: keycloak-instance
  realm:
    displayName: Registry
    enabled: true
    id: $REALM_NAME
    realm: $REALM_NAME
    sslRequired: none
    registrationAllowed: true
    verifyEmail: false
    requiredActions:
      - alias: VERIFY_PROFILE
        name: Verify Profile
        providerId: VERIFY_PROFILE
        enabled: false
        defaultAction: false
        priority: 100
        config: {}
    clients:
      - clientId: wrong-client
        enabled: true
        clientAuthenticatorType: client-secret,
        secret: test1,
        standardFlowEnabled: true,
        implicitFlowEnabled: true,
        directAccessGrantsEnabled: true,
        serviceAccountsEnabled: true,
        publicClient: false
        bearerOnly: false,
        consentRequired: false,
        redirectUris:
          - '*'
        webOrigins:
          - '*'

      - clientId: developer-client
        enabled: true
        clientAuthenticatorType: client-secret,
        secret: test1,
        standardFlowEnabled: true,
        implicitFlowEnabled: true,
        directAccessGrantsEnabled: true,
        serviceAccountsEnabled: true,
        publicClient: false
        bearerOnly: false,
        consentRequired: false,
        redirectUris:
          - '*'
        webOrigins:
          - '*'

      - clientId: developer-2-client
        enabled: true
        clientAuthenticatorType: client-secret,
        secret: test2,
        standardFlowEnabled: true,
        implicitFlowEnabled: true,
        directAccessGrantsEnabled: true,
        serviceAccountsEnabled: true,
        publicClient: false
        bearerOnly: false,
        consentRequired: false,
        redirectUris:
          - '*'
        webOrigins:
          - '*'

      - clientId: no-role-client
        enabled: true
        clientAuthenticatorType: client-secret,
        secret: test1,
        standardFlowEnabled: true,
        implicitFlowEnabled: true,
        directAccessGrantsEnabled: true,
        serviceAccountsEnabled: true,
        publicClient: false
        bearerOnly: false,
        consentRequired: false,
        redirectUris:
          - '*'
        webOrigins:
          - '*'

      - clientId: readonly-client
        enabled: true
        clientAuthenticatorType: client-secret,
        secret: test1,
        standardFlowEnabled: true,
        implicitFlowEnabled: true,
        directAccessGrantsEnabled: true,
        serviceAccountsEnabled: true,
        publicClient: false
        bearerOnly: false,
        consentRequired: false,
        redirectUris:
          - '*'
        webOrigins:
          - '*'

      - clientId: registry-client-ui
        implicitFlowEnabled: true
        publicClient: true
        redirectUris:
          - '*'
        standardFlowEnabled: true
        webOrigins:
          - '*'

      - clientId: registry-client-api
        directAccessGrantsEnabled: true
        implicitFlowEnabled: true
        publicClient: true
        redirectUris:
          - '*'
        standardFlowEnabled: true
        webOrigins:
          - '*'

      - clientId: test-client-api
        directAccessGrantsEnabled: true
        implicitFlowEnabled: true
        publicClient: false
        redirectUris:
          - '*'
        serviceAccountsEnabled: true
        standardFlowEnabled: true
        webOrigins:
          - '*'
    roles:
      realm:
        - name: sr-admin
        - name: sr-developer
        - name: sr-readonly
        - name: test-admin-role
        - name: test-developer-role
        - name: test-readonly-role
    defaultRoles:
      - sr-readonly
    users:
      - username: service-account-wrong-client
        serviceAccountClientId: wrong-client
        enabled: true
        realmRoles:
          - sr-developer

      - username: readonly-client
        serviceAccountClientId: readonly-client
        enabled: true
        realmRoles:
          - sr-readonly

      - username: developer-client
        serviceAccountClientId: developer-client
        enabled: true
        realmRoles:
          - sr-developer

      - username: developer-2-client
        serviceAccountClientId: developer-2-client
        enabled: true
        realmRoles:
          - sr-developer

      - username: registry-admin
        credentials:
          - temporary: false
            type: password
            value: secret
        enabled: true
        realmRoles:
          - sr-admin        

      - username: registry-developer
        credentials:
          - temporary: false
            type: password
            value: secret
        enabled: true
        realmRoles:
          - sr-developer

      - username: registry-user
        credentials:
          - temporary: false
            type: password
            value: secret
        enabled: true
        realmRoles:
          - sr-readonly

      - username: registry-no-role-user
        credentials:
          - temporary: false
            type: password
            value: secret
        enabled: true
        realmRoles: []
